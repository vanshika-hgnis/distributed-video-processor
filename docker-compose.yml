services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672" # AMQP (container:5672 -> host:5672)
      - "15673:15673" # Management UI
    networks:
      - app-network
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "await_startup"]
      interval: 10s
      timeout: 10s
      retries: 10

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    networks:
      - app-network
    volumes:
      - storage:/app/storage
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - WEBSOCKET_ENABLED=true
      - REACT_APP_WS_URL=ws://server:8000
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --ws websockets

  video_enhancement:
    build:
      context: ./workers/video_enhancement
      dockerfile: Dockerfile
    networks:
      - app-network
    volumes:
      - storage:/app/storage
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=guest
      - RABBITMQ_PASS=guest

  metadata_extraction:
    build:
      context: ./workers/metadata_extraction
      dockerfile: Dockerfile
    networks:
      - app-network
    volumes:
      - storage:/app/storage
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=guest
      - RABBITMQ_PASS=guest

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - app-network
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_WS_URL=ws://localhost:8000

networks:
  app-network:
    driver: bridge

volumes:
  rabbitmq_data:
  storage:
